/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu_Administracao;

import conexao_Mysql.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author
 */
public class editar_Alunos extends javax.swing.JFrame {

    /**
     * Creates new form gerenciamento_Admin
     */
    public editar_Alunos() {
        initComponents();
        listarAlunos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table_Alunos = new javax.swing.JTable();
        painel_Fundo = new javax.swing.JPanel();
        painel_Azul = new javax.swing.JPanel();
        icon_Cracha = new javax.swing.JLabel();
        label_CadastroAdmin1 = new javax.swing.JLabel();
        label_Id = new javax.swing.JLabel();
        id_Aluno = new javax.swing.JTextField();
        label_Nome = new javax.swing.JLabel();
        campo_Nome = new javax.swing.JTextField();
        label_Matricula = new javax.swing.JLabel();
        campo_Matricula = new javax.swing.JFormattedTextField();
        label_Turma = new javax.swing.JLabel();
        turma_Box = new javax.swing.JComboBox<>();
        ano_inserido = new javax.swing.JFormattedTextField();
        label_AnoInsercai = new javax.swing.JLabel();
        button_Salvar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        painel_Branco = new javax.swing.JPanel();
        icon_Edit = new javax.swing.JLabel();
        label_EdicaoAdmin = new javax.swing.JLabel();
        button_Pesquisar = new javax.swing.JButton();
        btn_Carregar = new javax.swing.JButton();
        Close = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Alunos1 = new javax.swing.JTable();

        table_Alunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome", "Matricula", "Turma", "Admissão", "Biometria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_Alunos);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painel_Fundo.setLayout(null);

        painel_Azul.setBackground(new java.awt.Color(0, 0, 51));
        painel_Azul.setLayout(null);

        icon_Cracha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icon_Cracha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu_Administracao/CRACHA.png"))); // NOI18N
        painel_Azul.add(icon_Cracha);
        icon_Cracha.setBounds(160, 50, 50, 40);

        label_CadastroAdmin1.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        label_CadastroAdmin1.setForeground(new java.awt.Color(255, 255, 255));
        label_CadastroAdmin1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_CadastroAdmin1.setText("Alterar cadastro");
        label_CadastroAdmin1.setToolTipText("");
        label_CadastroAdmin1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        painel_Azul.add(label_CadastroAdmin1);
        label_CadastroAdmin1.setBounds(10, 10, 320, 50);

        label_Id.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Id.setForeground(new java.awt.Color(255, 255, 255));
        label_Id.setText("ID:");
        painel_Azul.add(label_Id);
        label_Id.setBounds(30, 90, 30, 16);

        id_Aluno.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        id_Aluno.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id_Aluno.setEnabled(false);
        id_Aluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id_AlunoActionPerformed(evt);
            }
        });
        painel_Azul.add(id_Aluno);
        id_Aluno.setBounds(30, 110, 50, 20);

        label_Nome.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Nome.setForeground(new java.awt.Color(255, 255, 255));
        label_Nome.setText("Nome Completo:");
        painel_Azul.add(label_Nome);
        label_Nome.setBounds(30, 140, 100, 16);

        campo_Nome.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        campo_Nome.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        painel_Azul.add(campo_Nome);
        campo_Nome.setBounds(30, 160, 270, 19);

        label_Matricula.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Matricula.setForeground(new java.awt.Color(255, 255, 255));
        label_Matricula.setText("Matrícula:");
        painel_Azul.add(label_Matricula);
        label_Matricula.setBounds(30, 190, 70, 16);

        try {
            campo_Matricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campo_Matricula.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campo_Matricula.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        painel_Azul.add(campo_Matricula);
        campo_Matricula.setBounds(30, 210, 270, 19);

        label_Turma.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Turma.setForeground(new java.awt.Color(255, 255, 255));
        label_Turma.setText("Turma:");
        painel_Azul.add(label_Turma);
        label_Turma.setBounds(30, 240, 70, 16);

        turma_Box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma das opções abaixo", "Administração", "Enfermagem", "Informática" }));
        turma_Box.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        turma_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turma_BoxActionPerformed(evt);
            }
        });
        painel_Azul.add(turma_Box);
        turma_Box.setBounds(30, 260, 270, 22);

        try {
            ano_inserido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ano_inserido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ano_inserido.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        painel_Azul.add(ano_inserido);
        ano_inserido.setBounds(30, 310, 150, 19);

        label_AnoInsercai.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_AnoInsercai.setForeground(new java.awt.Color(255, 255, 255));
        label_AnoInsercai.setText("Ano de admissão:");
        painel_Azul.add(label_AnoInsercai);
        label_AnoInsercai.setBounds(30, 290, 130, 16);

        button_Salvar.setText("Salvar alterações");
        button_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SalvarActionPerformed(evt);
            }
        });
        painel_Azul.add(button_Salvar);
        button_Salvar.setBounds(30, 390, 270, 23);

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        painel_Azul.add(jButton1);
        jButton1.setBounds(30, 420, 270, 23);

        jButton2.setText("Limpar Campos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        painel_Azul.add(jButton2);
        jButton2.setBounds(30, 450, 270, 23);

        painel_Fundo.add(painel_Azul);
        painel_Azul.setBounds(0, 0, 340, 510);

        painel_Branco.setBackground(new java.awt.Color(51, 153, 255));
        painel_Branco.setLayout(null);

        icon_Edit.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\EDITICON.png")); // NOI18N
        painel_Branco.add(icon_Edit);
        icon_Edit.setBounds(450, 80, 86, 50);

        label_EdicaoAdmin.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        label_EdicaoAdmin.setForeground(new java.awt.Color(255, 255, 255));
        label_EdicaoAdmin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_EdicaoAdmin.setText("Edição/cadastro de alunos 1° ano");
        label_EdicaoAdmin.setToolTipText("");
        label_EdicaoAdmin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        painel_Branco.add(label_EdicaoAdmin);
        label_EdicaoAdmin.setBounds(70, 60, 400, 50);

        button_Pesquisar.setText("Atualizar página");
        button_Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_PesquisarActionPerformed(evt);
            }
        });
        painel_Branco.add(button_Pesquisar);
        button_Pesquisar.setBounds(260, 470, 150, 20);

        btn_Carregar.setText("Carregar campos");
        btn_Carregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CarregarActionPerformed(evt);
            }
        });
        painel_Branco.add(btn_Carregar);
        btn_Carregar.setBounds(420, 470, 130, 20);

        Close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Close.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\CLOSE.png")); // NOI18N
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
        });
        painel_Branco.add(Close);
        Close.setBounds(510, 10, 50, 40);

        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\BACK-ARROW.png")); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        painel_Branco.add(back);
        back.setBounds(470, 10, 32, 40);

        table_Alunos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Matricula", "Turma", "Admissão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_Alunos1);

        jScrollPane3.setViewportView(jScrollPane1);

        painel_Branco.add(jScrollPane3);
        jScrollPane3.setBounds(20, 140, 530, 320);

        painel_Fundo.add(painel_Branco);
        painel_Branco.setBounds(340, 0, 570, 510);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(916, 538));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        
        //Object[] options = { "Confirmar", "Cancelar" };
        //JOptionPane.showOptionDialog(null, "<html><i>Você ira perder a autenticação se confirmar!</i>"+"<br>"+"<i> Deseja realmente sair?</i></html>", "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);    

            cadastro_Alunos acesso = new cadastro_Alunos(); 
            acesso.setVisible(true);

            dispose(); //Fecha a tela de login
    }//GEN-LAST:event_backMouseClicked

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        // TODO add your handling code here:
        
        //FUNÇÃO DE CONFIRMAÇÃO
        String message = "<html><i>Deseja fechar o programa?</i></html>";
        String title = "Confirmação";
        //Exibe caixa de dialogo (veja figura) solicitando confirmação ou não. 
        //Se o usuário clicar em "Sim" retorna 0 pra variavel reply, se informado não retorna 1
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
          if (reply == JOptionPane.YES_OPTION)
          {
            dispose(); //Fecha a tela de login
          }
    }//GEN-LAST:event_CloseMouseClicked

    private void btn_CarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CarregarActionPerformed
        // TODO add your handling code here:
        CarregarCampos();
       
        
        
    }//GEN-LAST:event_btn_CarregarActionPerformed

    private void button_PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_PesquisarActionPerformed
        // TODO add your handling code here:
        listarAlunos();
      
    }//GEN-LAST:event_button_PesquisarActionPerformed

    private void id_AlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id_AlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id_AlunoActionPerformed

    private void turma_BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turma_BoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_turma_BoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         //FUNÇÃO DE CONFIRMAÇÃO
        String message = "<html><i>Deseja realmente deletar esse cadastro?</i></html>";
        String title = "Confirmação";
        //Exibe caixa de dialogo (veja figura) solicitando confirmação ou não. 
        //Se o usuário clicar em "Sim" retorna 0 pra variavel reply, se informado não retorna 1
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
          if (reply == JOptionPane.YES_OPTION)
          {
            DeletarUser();
            listarAlunos();
            LimparCampos();
            
            
            JOptionPane.showMessageDialog(null, "Usuário deletado com sucesso!");
          }
        
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void button_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SalvarActionPerformed
        // TODO add your handling code here:
        AlterarAluno();
        JOptionPane.showMessageDialog(null, "Alteração realizada com sucesso!");
        LimparCampos();
        listarAlunos();
    }//GEN-LAST:event_button_SalvarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        LimparCampos();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editar_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editar_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editar_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editar_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editar_Alunos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Close;
    private javax.swing.JFormattedTextField ano_inserido;
    private javax.swing.JLabel back;
    private javax.swing.JButton btn_Carregar;
    private javax.swing.JButton button_Pesquisar;
    private javax.swing.JButton button_Salvar;
    private javax.swing.JFormattedTextField campo_Matricula;
    private javax.swing.JTextField campo_Nome;
    private javax.swing.JLabel icon_Cracha;
    private javax.swing.JLabel icon_Edit;
    private javax.swing.JTextField id_Aluno;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label_AnoInsercai;
    private javax.swing.JLabel label_CadastroAdmin1;
    private javax.swing.JLabel label_EdicaoAdmin;
    private javax.swing.JLabel label_Id;
    private javax.swing.JLabel label_Matricula;
    private javax.swing.JLabel label_Nome;
    private javax.swing.JLabel label_Turma;
    private javax.swing.JPanel painel_Azul;
    private javax.swing.JPanel painel_Branco;
    private javax.swing.JPanel painel_Fundo;
    private javax.swing.JTable table_Alunos;
    private javax.swing.JTable table_Alunos1;
    private javax.swing.JComboBox<String> turma_Box;
    // End of variables declaration//GEN-END:variables

    //LISTAGEM DOS USUARIOS ADMINISTRADORES JA CRIADOS
    private void listarAlunos(){
        try{
            alunosInsertB objAlunos = new alunosInsertB();
            
            DefaultTableModel model = (DefaultTableModel) table_Alunos1.getModel();
            model.setNumRows(0);
            
            ArrayList<alunosGetSet> lista = objAlunos.pesquisarAluno1();
            
            
            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getId_aluno(),
                    lista.get(num).getNome_aluno(),
                    lista.get(num).getMatricula(),
                    lista.get(num).getTurma(),
                    lista.get(num).getAno()                       
                });
            }
            
        }catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "editar_Admin - Método listarAdmin():" + erro);
        }
    }
    
    
    //METODO ALTERAR ADMINISTRADOR
    private void AlterarAluno(){
        int id_aluno;
        String matricula;
        String nome_aluno, turma, ano;
        
        id_aluno = Integer.parseInt(id_Aluno.getText());
        nome_aluno = campo_Nome.getText();
        matricula = campo_Matricula.getText();    
        turma = turma_Box.getSelectedItem().toString();
        ano = ano_inserido.getText();
        
        if((campo_Nome.getText().isEmpty()) || (campo_Matricula.getText().isEmpty()) || (ano_inserido.getText().isEmpty())){
            
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
            
        }else{
        
        
         alunosGetSet objAlunos = new alunosGetSet();
         objAlunos.setId_aluno(id_aluno);
         objAlunos.setNome_aluno(nome_aluno);
         objAlunos.setMatricula(matricula);
         objAlunos.setTurma(turma);
         objAlunos.setAno(ano);
         
         alunosInsertB objAlunosBD = new alunosInsertB();
         objAlunosBD.alterarAluno1(objAlunos);
         
        }
    }
    
    
    

    //FUNÇÃO RESPONSAVEL POR LIMPAR OS CAMPOS
    private void LimparCampos(){
        id_Aluno.setText("");
        campo_Nome.setText("");
        campo_Matricula.setText("");
        turma_Box.setSelectedItem("");
        ano_inserido.setText("");
        
    }
    
    //CARREGA OS CAMPOS DA TABELA PARA A PARTE DE ALTERAR
    private void CarregarCampos(){
        int setar = table_Alunos1.getSelectedRow();
        
       
        id_Aluno.setText(table_Alunos1.getModel().getValueAt(setar, 0).toString());
        campo_Nome.setText(table_Alunos1.getModel().getValueAt(setar, 1).toString());
        campo_Matricula.setText(table_Alunos1.getModel().getValueAt(setar, 2).toString());
        turma_Box.setSelectedItem(table_Alunos1.getModel().getValueAt(setar, 3).toString());
        ano_inserido.setText(table_Alunos1.getModel().getValueAt(setar, 4).toString());   
    }
    
    
 
    private void DeletarUser(){
        int id_aluno;
        
        id_aluno = Integer.parseInt(id_Aluno.getText());
        
        alunosGetSet objAlunos = new alunosGetSet();
         objAlunos.setId_aluno(id_aluno);
        
        alunosInsertB objAlunosBD = new alunosInsertB();
        objAlunosBD.deletarAluno1(objAlunos);
        

    }
    
}
