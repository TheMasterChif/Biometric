/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu_Administracao;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import UTIL.ManipularImagem;
import java.awt.image.BufferedImage;
import java.sql.Connection;
import java.sql.PreparedStatement;
import conexao_Mysql.alunosGetSet;
import conexao_Mysql.alunosInsertB;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.Timer;








/**
 *
 * 
 */
public class cadastro_Alunos extends javax.swing.JFrame {
    
        
    private static byte[] Digital; //VARIAVEL QUE IRA CHAMAR A DIGITAL
    
    /**
     * Creates new form gerenciamento_Admin
     */
    BufferedImage imagem;
    public cadastro_Alunos() {
        initComponents();
        listarAlunos();
        
        
        Date dataSistema = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd");
        data3.setText(formato.format(dataSistema));
        
        
        Timer timer = new Timer(1000, new hora());
        timer.start();
        
        Date dataSistema1 = new Date();
        SimpleDateFormat formato1 = new SimpleDateFormat("MM");
        data2.setText(formato1.format(dataSistema1));
        
        Date dataSistema2 = new Date();
        SimpleDateFormat formato2 = new SimpleDateFormat("yyyy");
        campo_data.setText(formato2.format(dataSistema2));
     
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel_Fundo = new javax.swing.JPanel();
        painel_Azul = new javax.swing.JPanel();
        icon_Cracha = new javax.swing.JLabel();
        label_Nome = new javax.swing.JLabel();
        label_CadastroAlunos = new javax.swing.JLabel();
        label_Matricula = new javax.swing.JLabel();
        label_Turma = new javax.swing.JLabel();
        turma_Box = new javax.swing.JComboBox<>();
        label_Digital1 = new javax.swing.JLabel();
        button_Cadastrar = new javax.swing.JButton();
        label_AnoInsercai = new javax.swing.JLabel();
        campo_Matricula = new javax.swing.JFormattedTextField();
        btn_CadastrarBiometria = new javax.swing.JButton();
        lblImagem = new javax.swing.JLabel();
        lblImagem2 = new javax.swing.JLabel();
        ano_inserido = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        campo_Nome1 = new javax.swing.JTextField();
        painel_Branco = new javax.swing.JPanel();
        icon_Edit = new javax.swing.JLabel();
        label_EdicaoAlunos = new javax.swing.JLabel();
        button_Editar = new javax.swing.JButton();
        Close = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        button_Atualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Alunos = new javax.swing.JTable();
        campo_data = new javax.swing.JTextField();
        data3 = new javax.swing.JTextField();
        data2 = new javax.swing.JTextField();
        hora1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painel_Fundo.setLayout(null);

        painel_Azul.setBackground(new java.awt.Color(0, 0, 51));
        painel_Azul.setLayout(null);

        icon_Cracha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icon_Cracha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/menu_Administracao/CRACHA.png"))); // NOI18N
        painel_Azul.add(icon_Cracha);
        icon_Cracha.setBounds(160, 50, 50, 40);

        label_Nome.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Nome.setForeground(new java.awt.Color(255, 255, 255));
        label_Nome.setText("Nome Completo:");
        painel_Azul.add(label_Nome);
        label_Nome.setBounds(30, 110, 100, 16);

        label_CadastroAlunos.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        label_CadastroAlunos.setForeground(new java.awt.Color(255, 255, 255));
        label_CadastroAlunos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_CadastroAlunos.setText("Cadastro de Alunos");
        label_CadastroAlunos.setToolTipText("");
        label_CadastroAlunos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        painel_Azul.add(label_CadastroAlunos);
        label_CadastroAlunos.setBounds(10, 10, 320, 50);

        label_Matricula.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Matricula.setForeground(new java.awt.Color(255, 255, 255));
        label_Matricula.setText("Matrícula:");
        painel_Azul.add(label_Matricula);
        label_Matricula.setBounds(30, 160, 70, 16);

        label_Turma.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Turma.setForeground(new java.awt.Color(255, 255, 255));
        label_Turma.setText("Turma:");
        painel_Azul.add(label_Turma);
        label_Turma.setBounds(30, 210, 70, 16);

        turma_Box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma das opções abaixo", "Administração", "Enfermagem", "Informática" }));
        turma_Box.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        turma_Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turma_BoxActionPerformed(evt);
            }
        });
        painel_Azul.add(turma_Box);
        turma_Box.setBounds(30, 230, 270, 22);

        label_Digital1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_Digital1.setForeground(new java.awt.Color(255, 255, 255));
        label_Digital1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        label_Digital1.setText("Digital:");
        painel_Azul.add(label_Digital1);
        label_Digital1.setBounds(30, 310, 60, 16);

        button_Cadastrar.setText("Cadastrar");
        button_Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_CadastrarActionPerformed(evt);
            }
        });
        painel_Azul.add(button_Cadastrar);
        button_Cadastrar.setBounds(210, 450, 100, 23);

        label_AnoInsercai.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        label_AnoInsercai.setForeground(new java.awt.Color(255, 255, 255));
        label_AnoInsercai.setText("Ano de admissão:");
        painel_Azul.add(label_AnoInsercai);
        label_AnoInsercai.setBounds(30, 260, 130, 16);

        try {
            campo_Matricula.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campo_Matricula.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campo_Matricula.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        painel_Azul.add(campo_Matricula);
        campo_Matricula.setBounds(30, 180, 270, 19);

        btn_CadastrarBiometria.setText("Escanear");
        btn_CadastrarBiometria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CadastrarBiometriaActionPerformed(evt);
            }
        });
        painel_Azul.add(btn_CadastrarBiometria);
        btn_CadastrarBiometria.setBounds(90, 310, 90, 20);

        lblImagem.setForeground(new java.awt.Color(255, 255, 255));
        lblImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagem.setText("Selecionar foto...");
        lblImagem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImagemMouseClicked(evt);
            }
        });
        painel_Azul.add(lblImagem);
        lblImagem.setBounds(200, 270, 100, 140);

        lblImagem2.setForeground(new java.awt.Color(255, 255, 255));
        lblImagem2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagem2.setText("Carregar biometria...");
        lblImagem2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImagem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImagem2MouseClicked(evt);
            }
        });
        painel_Azul.add(lblImagem2);
        lblImagem2.setBounds(50, 340, 110, 150);

        try {
            ano_inserido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ano_inserido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ano_inserido.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        painel_Azul.add(ano_inserido);
        ano_inserido.setBounds(30, 280, 150, 19);

        jButton1.setText("Limpar Campos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        painel_Azul.add(jButton1);
        jButton1.setBounds(210, 480, 120, 23);

        campo_Nome1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        campo_Nome1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        painel_Azul.add(campo_Nome1);
        campo_Nome1.setBounds(30, 130, 270, 19);

        painel_Fundo.add(painel_Azul);
        painel_Azul.setBounds(0, 0, 340, 510);

        painel_Branco.setBackground(new java.awt.Color(51, 153, 255));
        painel_Branco.setLayout(null);

        icon_Edit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icon_Edit.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\EDITICON.png")); // NOI18N
        painel_Branco.add(icon_Edit);
        icon_Edit.setBounds(580, 80, 50, 50);

        label_EdicaoAlunos.setFont(new java.awt.Font("Times New Roman", 0, 25)); // NOI18N
        label_EdicaoAlunos.setForeground(new java.awt.Color(255, 255, 255));
        label_EdicaoAlunos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_EdicaoAlunos.setText("Alunos Cadastrados");
        label_EdicaoAlunos.setToolTipText("");
        label_EdicaoAlunos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        painel_Branco.add(label_EdicaoAlunos);
        label_EdicaoAlunos.setBounds(200, 50, 400, 50);

        button_Editar.setText("Alterar / Excluir cadastros");
        button_Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_EditarActionPerformed(evt);
            }
        });
        painel_Branco.add(button_Editar);
        button_Editar.setBounds(480, 480, 200, 23);

        Close.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Close.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\CLOSE.png")); // NOI18N
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
        });
        painel_Branco.add(Close);
        Close.setBounds(640, 10, 50, 40);

        back.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        back.setIcon(new javax.swing.ImageIcon("C:\\Users\\PEDRO\\Documents\\NetBeansProjects\\crud\\src\\ICONS\\BACK-ARROW.png")); // NOI18N
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        painel_Branco.add(back);
        back.setBounds(600, 10, 32, 40);

        button_Atualizar.setText("Atualizar página");
        button_Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_AtualizarActionPerformed(evt);
            }
        });
        painel_Branco.add(button_Atualizar);
        button_Atualizar.setBounds(40, 110, 120, 23);

        table_Alunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Matricula", "Turma", "Admissão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_Alunos);
        if (table_Alunos.getColumnModel().getColumnCount() > 0) {
            table_Alunos.getColumnModel().getColumn(0).setPreferredWidth(275);
            table_Alunos.getColumnModel().getColumn(1).setPreferredWidth(125);
            table_Alunos.getColumnModel().getColumn(2).setPreferredWidth(110);
            table_Alunos.getColumnModel().getColumn(3).setMaxWidth(220);
        }

        jScrollPane2.setViewportView(jScrollPane1);

        painel_Branco.add(jScrollPane2);
        jScrollPane2.setBounds(40, 140, 640, 330);

        campo_data.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        campo_data.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campo_data.setEnabled(false);
        painel_Branco.add(campo_data);
        campo_data.setBounds(70, 10, 50, 20);

        data3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        data3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        data3.setEnabled(false);
        painel_Branco.add(data3);
        data3.setBounds(10, 10, 30, 20);

        data2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        data2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        data2.setEnabled(false);
        painel_Branco.add(data2);
        data2.setBounds(40, 10, 30, 20);

        hora1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        hora1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hora1.setEnabled(false);
        painel_Branco.add(hora1);
        hora1.setBounds(150, 10, 90, 20);

        painel_Fundo.add(painel_Branco);
        painel_Branco.setBounds(340, 0, 700, 510);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel_Fundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1046, 538));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:

        //Object[] options = { "Confirmar", "Cancelar" };
        //JOptionPane.showOptionDialog(null, "<html><i>Você ira perder a autenticação se confirmar!</i>"+"<br>"+"<i> Deseja realmente sair?</i></html>", "Informação", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);    
        tela_Decisao_Admin_Aluno acesso = new tela_Decisao_Admin_Aluno();
        acesso.setVisible(true);

        dispose(); //Fecha a tela de login


    }//GEN-LAST:event_backMouseClicked

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        // TODO add your handling code here:

        //FUNÇÃO DE CONFIRMAÇÃO
        String message = "<html><i>Deseja fechar o programa?</i></html>";
        String title = "Confirmação";
        //Exibe caixa de dialogo (veja figura) solicitando confirmação ou não. 
        //Se o usuário clicar em "Sim" retorna 0 pra variavel reply, se informado não retorna 1
        int reply = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {
            dispose(); //Fecha a tela de login
        }
    }//GEN-LAST:event_CloseMouseClicked

    private void turma_BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turma_BoxActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_turma_BoxActionPerformed

    private void button_CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_CadastrarActionPerformed
 // TODO add your handling code here:
        cadastrar_Alunos();        
        listarAlunos();
        
         
        
        

    }//GEN-LAST:event_button_CadastrarActionPerformed

    private void button_AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_AtualizarActionPerformed
        // TODO add your handling code here:
        listarAlunos();
        
    }//GEN-LAST:event_button_AtualizarActionPerformed

    private void btn_CadastrarBiometriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CadastrarBiometriaActionPerformed
        String url = null;
        url = "test\\BioMini\\bin\\Biomini_DemoCS.exe\n";
        
        try {
            Process processo = Runtime.getRuntime().exec(url);

        } catch (IOException ex) {
            Logger.getLogger(frmTestando.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_CadastrarBiometriaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LimparCampos();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void button_EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_EditarActionPerformed
        // TODO add your handling code here:
        editar_Alunos acesso = new editar_Alunos();
        acesso.setVisible(true);

        dispose(); //Fecha a tela de login
        
    }//GEN-LAST:event_button_EditarActionPerformed

    private void lblImagem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagem2MouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            try {

                BufferedImage imagem = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 160, 160);

                lblImagem2.setIcon(new ImageIcon(imagem));

            } catch (Exception ex) {
                // System.out.println(ex.printStackTrace().toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }//GEN-LAST:event_lblImagem2MouseClicked

    private void lblImagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagemMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            try {

                BufferedImage imagem = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 160, 160);

                lblImagem.setIcon(new ImageIcon(imagem));

            } catch (Exception ex) {
                // System.out.println(ex.printStackTrace().toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }//GEN-LAST:event_lblImagemMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
      
        
  
    }//GEN-LAST:event_formWindowOpened

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cadastro_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cadastro_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cadastro_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cadastro_Alunos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cadastro_Alunos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Close;
    private javax.swing.JFormattedTextField ano_inserido;
    private javax.swing.JLabel back;
    private javax.swing.JButton btn_CadastrarBiometria;
    private javax.swing.JButton button_Atualizar;
    private javax.swing.JButton button_Cadastrar;
    private javax.swing.JButton button_Editar;
    private javax.swing.JFormattedTextField campo_Matricula;
    private javax.swing.JTextField campo_Nome1;
    private javax.swing.JTextField campo_data;
    private javax.swing.JTextField data2;
    private javax.swing.JTextField data3;
    private javax.swing.JTextField hora1;
    private javax.swing.JLabel icon_Cracha;
    private javax.swing.JLabel icon_Edit;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_AnoInsercai;
    private javax.swing.JLabel label_CadastroAlunos;
    private javax.swing.JLabel label_Digital1;
    private javax.swing.JLabel label_EdicaoAlunos;
    private javax.swing.JLabel label_Matricula;
    private javax.swing.JLabel label_Nome;
    private javax.swing.JLabel label_Turma;
    private javax.swing.JLabel lblImagem;
    private javax.swing.JLabel lblImagem2;
    private javax.swing.JPanel painel_Azul;
    private javax.swing.JPanel painel_Branco;
    private javax.swing.JPanel painel_Fundo;
    private javax.swing.JTable table_Alunos;
    private javax.swing.JComboBox<String> turma_Box;
    // End of variables declaration//GEN-END:variables

    private void cadastrar_Alunos() {
        Connection conn;
        PreparedStatement pstm = null;
        
        String nome = campo_Nome1.getText(); //PEGA O NOME
        String matricula = campo_Matricula.getText(); //PEGA A MATRICULA
        String turma = String.valueOf(turma_Box.getSelectedItem());
        
        String ano = ano_inserido.getText();
        int ano1 = Integer.parseInt(ano); //Conversão de STRING para INTEIRO
        
        String data = campo_data.getText();
        int data1 = Integer.parseInt(data); //Conversão de STRING para INTEIRO

        
        //CODIGO ABAIXO IRA VERIFICAR SE OS CAMPOS DIGITADOS ESTÃO VAZIOS. SE NÃO ESTIVER...
        if((campo_Nome1.getText().isEmpty()) || (campo_Matricula.getText().isEmpty()) || (ano_inserido.getText().isEmpty())){
            
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
            
        }else{
            //IRA VERIFICAR SE A DATA DIGITADA NO CAMPO ANO INSERIDO É MAIOR QUE A DATA ATUAL
            //SE FOR MAIOR OU MENOR, ISSO QUER DIZER QUE O ALUNO NÃO É DO PRIMEIRO ANO E COM ISSO NÃO SERA CRIADO
            if(ano1 ==  data1){
            
            alunosGetSet objAlunos = new alunosGetSet();
            objAlunos.setNome_aluno(nome);
            objAlunos.setMatricula(matricula);
            objAlunos.setTurma(turma);
            objAlunos.setAno(ano);
            objAlunos.setData(data);

            alunosInsertB objAlunosBD = new alunosInsertB();
            objAlunosBD.cadastrarAlunos(objAlunos);
            
        }else{
        
            JOptionPane.showMessageDialog(null,"Operação não realizada. A data de admissão é maior ou menor que o ano atual!");
           
        }
       }
    }
    
     //Metodo que ira enviar a foto para o BD
    private void enviarImagem(){
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            try {
                imagem = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 160, 160);

                lblImagem.setIcon(new ImageIcon(imagem));

            } catch (Exception ex) {
               // System.out.println(ex.printStackTrace().toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }
  
    
    
    
    
    //Metodo que ira enviar a biometria ao BD
    private void enviarBiometria(){
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        int res = fc.showOpenDialog(null);

        if (res == JFileChooser.APPROVE_OPTION) {
            File arquivo = fc.getSelectedFile();

            try {
                imagem = ManipularImagem.setImagemDimensao(arquivo.getAbsolutePath(), 160, 160);

                lblImagem.setIcon(new ImageIcon(imagem));

            } catch (Exception ex) {
               // System.out.println(ex.printStackTrace().toString());
            }

        } else {
            JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum arquivo.");
        }
    }
    
    
    
    
    private void listarAlunos() {
        try {
            alunosInsertB objAlunos = new alunosInsertB();

            DefaultTableModel model = (DefaultTableModel) table_Alunos.getModel();
            model.setNumRows(0);

            ArrayList<alunosGetSet> lista = objAlunos.pesquisarAluno1();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getNome_aluno(),
                    lista.get(num).getMatricula(),
                    lista.get(num).getTurma(),
                    lista.get(num).getAno()
                }); 
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "cadastro_Alunos - Método listarAlunos():" + erro);
        }

    }
    
    
    
    //Esse metodo ira dizer se o usuario ja cadastrou ou não a biometria
    private void listarAlunosBioFoto(){
        try {
            alunosInsertB objAlunos = new alunosInsertB();

            DefaultTableModel model = (DefaultTableModel) table_Alunos.getModel();
            model.setNumRows(0);

            ArrayList<alunosGetSet> lista = objAlunos.pesquisarAluno1();

            for (int num = 0; num < lista.size(); num++) {
                model.addRow(new Object[]{
                    lista.get(num).getNome_aluno(),
                    lista.get(num).getMatricula(),
                    lista.get(num).getTurma(),
                    lista.get(num).getAno()          
                }); 
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "cadastro_Alunos - Método listarAlunos():" + erro);
        }
    
    
    }
    
    
    //Metodo que ira limpar os campos de cadastro
    private void LimparCampos(){
        campo_Nome1.setText("");
        campo_Nome1.setText("");
        turma_Box.setSelectedItem("");
        campo_Nome1.setText("");
        
    }
    

    
    
    //HORA
        class hora implements ActionListener{
        public void actionPerformed(ActionEvent e){
            Calendar now  = Calendar.getInstance();
            hora1.setText(String.format("%1$tH:%1$tM:%1$tS", now));
            }
        }
        
        
        
        
        
    }
    
   
    
    

